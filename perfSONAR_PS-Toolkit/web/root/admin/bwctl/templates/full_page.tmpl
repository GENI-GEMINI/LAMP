[% title = "BWCTL Configuration Tool" %]

[% INCLUDE header.tmpl %]

<script type="text/javascript">

function delete_user(user_id) { 
	handle_cgi_ajax_call(null, 'Problem removing user ' + user_id, true, 'delete_user', [ user_id ]);
}

function delete_network(network_id) { 
	handle_cgi_ajax_call(null, 'Problem removing network ' + network_id, true, 'delete_network', [ network_id ]);
}

function handle_reset_config() {
	handle_cgi_ajax_call('Reseting configuration...', 'Problem reseting configuration', true, 'reset_config');
}

function handle_save_config() {
	handle_cgi_ajax_call('Saving configuration and restarting services...', 'Problem saving configuration or restarting services', true, 'save_config');
}

function close_dialog(dialog_name) {
	dijit.byId(dialog_name).destroyRecursive();
}

function modify_group(group_id, allow_tcp, allow_udp, bandwidth, duration, event_horizon, allow_open_mode, pending, group_parent) {
	handle_cgi_ajax_call(null, 'Problem changing group configuration', true, 'update_group', [ group_id, allow_tcp, allow_udp, bandwidth, duration, event_horizon, allow_open_mode, pending, group_parent ]);
}

function display_change_password_dialog(user_id, username) {
	var title = "Change Password For "+username;

	var dialog_id = "change_password_dialog";

	var dialog_content = "";
	dialog_content += "<center><font color='red'><div id='change_password_error'></div></font></center>";
	dialog_content += "<table>";
	dialog_content += "<tr>";
	dialog_content += "<td>Password</td>";
	dialog_content += "<td colspan=2><input type='password' dojoType='dijit.form.ValidationTextBox' required='true' invalidMessage='You must enter a password' id='change_password_dialog_password' size='10' value='' /></td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Confirm Password</td>";
	dialog_content += "<td colspan=2><input type='password' dojoType='dijit.form.ValidationTextBox' required='true' invalidMessage='You must enter a confirmation password' id='change_password_dialog_confirmation_password' size='10' value='' /></td>";
	dialog_content += "</tr>";
	dialog_content += "</table>";
	dialog_content += "<button dojoType='dijit.form.Button' id='change_password_change'>Change</button>";
	dialog_content += "<button dojoType='dijit.form.Button' id='change_password_cancel'>Cancel</button>";

	var dialog = new dijit.Dialog({ title: title, content: dialog_content, id: dialog_id });

	dojo.connect(dialog, 'hide', dojo.hitch(null, 'close_dialog', dialog_id));
	dojo.connect(dijit.byId('change_password_cancel'), 'onClick', function() { dijit.byId(dialog_id).hide(); });
	dojo.connect(dijit.byId('change_password_change'), 'onClick', dojo.hitch(null,
										function(user_id, dialog_id) {
											var password         = dijit.byId('change_password_dialog_password').attr('value');
											var confirm_password = dijit.byId('change_password_dialog_confirmation_password').attr('value');

											if (password != confirm_password) {
												dojo.byId('change_password_error').innerHTML = "Passwords do not match";
												return;
											}

											handle_cgi_ajax_call(null, 'Problem changing password', true, 'change_password', [ user_id, password ]);
											dijit.byId(dialog_id).hide();
										},
										user_id, dialog_id)
			);

	dialog.show();
}

function display_change_group_dialog(type, id, name, current_group, groups) {
	var title = "Change Group For "+name;

	var dialog_id = "change_group_dialog";

	var dialog_content = "";
	dialog_content += "<tr>";
	dialog_content += "<td>Group</td>";
	dialog_content += "<select id='change_group_dialog_group' dojoType='dijit.form.FilteringSelect' autocomplete='false' value='"+current_group+"'>";
	for(var group_id in groups) {
		dialog_content += "	<option value='"+group_id+"'>"+groups[group_id]+"</option>";
	}
	dialog_content += "</select>";
	dialog_content += "</tr>";
	dialog_content += "<button dojoType='dijit.form.Button' id='change_group_change'>Change</button>";
	dialog_content += "<button dojoType='dijit.form.Button' id='change_group_cancel'>Cancel</button>";

	var dialog = new dijit.Dialog({ title: title, content: dialog_content, id: dialog_id });

	dojo.connect(dialog, 'hide', dojo.hitch(null, 'close_dialog', dialog_id));
	dojo.connect(dijit.byId('change_group_cancel'), 'onClick', function() { dijit.byId(dialog_id).hide(); });
	dojo.connect(dijit.byId('change_group_change'), 'onClick', dojo.hitch(null,
										function(type, id, dialog_id) {
											var group            = dijit.byId('change_group_dialog_group').attr('value');
											var fn;
											if (type == "user") {
												fn = "update_user";
											} else {
												fn = "update_network";
											}
											handle_cgi_ajax_call(null, 'Problem changing group', true, fn, [ id, group ]);
											dijit.byId(dialog_id).hide();
										},
										type, id, dialog_id)
			);

	dialog.show();
}

function display_add_user_dialog(groups) {
	var title = "Add New User";

	var dialog_id = "add_user_dialog";

	var dialog_content = "";
	dialog_content += "<center><font color='red'><div id='add_user_error'></div></font></center>";
	dialog_content += "<table>";
	dialog_content += "<tr>";
	dialog_content += "<td>Username</td>";
	dialog_content += "<td colspan=2><input type='text' dojoType='dijit.form.ValidationTextBox' required='true' invalidMessage='You must enter a username' id='add_user_dialog_username' size='10' value='' /></td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Group</td>";
	dialog_content += "<td>";
	dialog_content += "<select id='add_user_dialog_group' dojoType='dijit.form.FilteringSelect' autocomplete='false' value=''>";
	for(var group_id in groups) {
		dialog_content += "	<option value='"+group_id+"'>"+groups[group_id]+"</option>";
	}
	dialog_content += "</select>";
	dialog_content += "</td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Password</td>";
	dialog_content += "<td colspan=2><input type='password' dojoType='dijit.form.ValidationTextBox' required='true' invalidMessage='You must enter a password' id='add_user_dialog_password' size='10' value='' /></td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Confirm Password</td>";
	dialog_content += "<td colspan=2><input type='password' dojoType='dijit.form.ValidationTextBox' required='true' invalidMessage='You must enter a confirmation password' id='add_user_dialog_confirmation_password' size='10' value='' /></td>";
	dialog_content += "</tr>";
	dialog_content += "</table>";
	dialog_content += "<button dojoType='dijit.form.Button' id='add_user_add'>Add</button>";
	dialog_content += "<button dojoType='dijit.form.Button' id='add_user_cancel'>Cancel</button>";

	var dialog = new dijit.Dialog({ title: title, content: dialog_content, id: dialog_id });

	dojo.connect(dialog, 'hide', dojo.hitch(null, 'close_dialog', dialog_id));
	dojo.connect(dijit.byId('add_user_cancel'), 'onClick', function() { dijit.byId(dialog_id).hide(); });
	dojo.connect(dijit.byId('add_user_add'), 'onClick', dojo.hitch(null,
										function(dialog_id) {
											var username         = dijit.byId('add_user_dialog_username').attr('value');
											var group            = dijit.byId('add_user_dialog_group').attr('value');
											var password         = dijit.byId('add_user_dialog_password').attr('value');
											var confirm_password = dijit.byId('add_user_dialog_confirmation_password').attr('value');

											if (password != confirm_password) {
												dojo.byId('add_user_error').innerHTML = "Passwords do not match";
												return;
											}

											handle_cgi_ajax_call(null, 'Problem adding user', true, 'add_user', [ username, group, password ]);
											dijit.byId(dialog_id).hide();
										},
										dialog_id)
			);

	dialog.show();
}

function display_add_network_dialog(groups) {
	var title = "Add New Network";

	var dialog_id = "add_network_dialog";

	var dialog_content = "";
	dialog_content += "<center><font color='red'><div id='add_network_error'></div></font></center>";
	dialog_content += "<table>";
	dialog_content += "<tr>";
	dialog_content += "<td>Network</td>";
	dialog_content += "<td><input type='text' dojoType='dijit.form.ValidationTextBox' required='true' regExpGen='dojox.validate.regexp.ipAddress' invalidMessage='You must enter an IP address' id='add_network_dialog_ip' size='10' value='' /></td>";
	dialog_content += "<td>";
	dialog_content += "<select id='add_network_dialog_netmask' dojoType='dijit.form.FilteringSelect' autocomplete='false' value='32'>";
	for(var i = 1; i <= 31; i++) {
		dialog_content += "	<option value='"+i+"'>"+i+"</option>";
	}
	dialog_content += "	<option value='32' selected='selected'>32</option>";
	dialog_content += "</select>";
	dialog_content += "</td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Group</td>";
	dialog_content += "<td>";
	dialog_content += "<select id='add_network_dialog_group' dojoType='dijit.form.FilteringSelect' autocomplete='false' value=''>";
	for(var group_id in groups) {
		dialog_content += "	<option value='"+group_id+"'>"+groups[group_id]+"</option>";
	}
	dialog_content += "</select>";
	dialog_content += "</td>";
	dialog_content += "</tr>";
	dialog_content += "</table>";
	dialog_content += "<button dojoType='dijit.form.Button' id='add_network_add'>Add</button>";
	dialog_content += "<button dojoType='dijit.form.Button' id='add_network_cancel'>Cancel</button>";

	var dialog = new dijit.Dialog({ title: title, content: dialog_content, id: dialog_id });

	dojo.connect(dialog, 'hide', dojo.hitch(null, 'close_dialog', dialog_id));
	dojo.connect(dijit.byId('add_network_cancel'), 'onClick', function() { dijit.byId(dialog_id).hide(); });
	dojo.connect(dijit.byId('add_network_add'), 'onClick', dojo.hitch(null,
										function(dialog_id) {
											var network_ip       = dijit.byId('add_network_dialog_ip').attr('value');
											var netmask          = dijit.byId('add_network_dialog_netmask').attr('value');
											var group            = dijit.byId('add_network_dialog_group').attr('value');

											// XXX: validate the IP

											var network_name = network_ip+"/"+netmask;

											handle_cgi_ajax_call(null, 'Problem changing password', true, 'add_network', [ network_name, group ]);
											dijit.byId(dialog_id).hide();
										},
										dialog_id)
			);

	dialog.show();
}

function ps_show(obj) {
	var el = dojo.byId(obj);
	el.style.display = '';
}

function ps_hide(obj) {
	var el = dojo.byId(obj);
	el.style.display = 'none';
}

function parse_amount(num) {
	var unit = "b";

	if (num > 1000) {
		num /= 1000;
		unit = "k";
	}

	if (num > 1000) {
		num /= 1000;
		unit = "m";
	}

	if (num > 1000) {
		num /= 1000;
		unit = "g";
	}

	return { 'amount': num, 'unit': unit };
}

function display_edit_group_dialog(group_id, description, allow_tcp, allow_udp, bandwidth, duration, event_horizon, allow_open_mode, pending, group_parent) {
	var title = "Edit Parameters Of Group "+description;

	var dialog_id = "edit_group_dialog";

	var bw_amt = parse_amount(bandwidth);

	var dialog_content = "";
	// the unconfigured stuff is added here as hidden input so that if we ever do make it configurable, we don't have to change the dojo.connect stuff
	dialog_content += "<input type='hidden' dojoType='dijit.form.TextBox' id='configure_group_event_horizon' value='"+event_horizon+"''/>";
	dialog_content += "<input type='hidden' dojoType='dijit.form.TextBox' id='configure_group_pending' value='"+pending+"''/>";
	dialog_content += "<input type='hidden' dojoType='dijit.form.TextBox' id='configure_group_group_parent' value='"+group_parent+"''/>";
	dialog_content += "<input type='hidden' dojoType='dijit.form.TextBox' id='configure_group_allow_open_mode' value='"+allow_open_mode+"''/>";
	dialog_content += "<table>";
	dialog_content += "<tr>";
	dialog_content += "<td>Allow TCP Tests</td>";
	dialog_content += "<td colspan=2><input type='checkbox' dojoType='dijit.form.CheckBox' id='configure_group_allow_tcp'"; if (allow_tcp == "on") { dialog_content += " checked='checked'"; } dialog_content += "/></td>";
	dialog_content += "<td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Allow UDP Tests</td>";
	dialog_content += "<td colspan=2><input type='checkbox' dojoType='dijit.form.CheckBox' id='configure_group_allow_udp'"; if (allow_udp == "on") { dialog_content += " checked='checked'"; } dialog_content += "/></td>";
	dialog_content += "<td>";
	dialog_content += "</tr>";
	dialog_content += "<tr>";
	dialog_content += "<td>Maximum Test Duration</td>";
	dialog_content += "<td><input type='text' dojoType='dijit.form.NumberTextBox' required='true' invalidMessage='The number must be 0 or greater. 0 means unlimited' constraints='{min:0}' id='configure_group_duration' size='10' value='"+duration+"''/></td>";
	dialog_content += "<td>Seconds</td>";
	dialog_content += "</tr>";
	dialog_content += "<tr id='configure_group_udp_questions' "; if (allow_udp != 'on') { dialog_content += "style='display:none'" }; dialog_content += ">";
	dialog_content += "<td>Maximum UDP Bandwidth</td>";
	dialog_content += "<td><input type='text' dojoType='dijit.form.NumberTextBox' required='true' invalidMessage='The number must be 0 or greater. 0 means unlimited' constraints='{min:0}' id='configure_group_bandwidth' size='10' value='"+bw_amt['amount']+"''/></td>";
	dialog_content += "<td>";
	dialog_content += "<select id='configure_group_bandwidth_unit' dojoType='dijit.form.FilteringSelect' autocomplete='false' value='"+bw_amt['unit']+"'>";
	dialog_content += "	<option value='b'>Bps</option>";
	dialog_content += "	<option value='k'>Kbps</option>";
	dialog_content += "	<option value='m'>Mbps</option>";
	dialog_content += "	<option value='g'>Gbps</option>";
	dialog_content += "</select>";
	dialog_content += "</td>";
	dialog_content += "</tr>";
	dialog_content += "</table>";
	dialog_content += "<button dojoType='dijit.form.Button' id='configure_group_save'>Change</button>";
	dialog_content += "<button dojoType='dijit.form.Button' id='configure_group_cancel'>Cancel</button>";

	var dialog = new dijit.Dialog({ title: title, content: dialog_content, id: "configure_group_dialog" });

	dojo.connect(dialog, 'hide', dojo.hitch(null, 'close_dialog', 'configure_group_dialog'));
	dojo.connect(dijit.byId('configure_group_cancel'), 'onClick', function() { dijit.byId('configure_group_dialog').hide(); });
	dojo.connect(dijit.byId('configure_group_allow_udp'), 'onChange', function() { if (this.checked) { ps_show('configure_group_udp_questions'); } else { ps_hide('configure_group_udp_questions'); } });
	dojo.connect(dijit.byId('configure_group_save'), 'onClick', dojo.hitch(null,
										function(group_id) {
											var allow_tcp = dijit.byId('configure_group_allow_tcp').checked;
											var allow_udp = dijit.byId('configure_group_allow_udp').checked;
											var bandwidth = dijit.byId('configure_group_bandwidth').attr('value');
											var bandwidth_unit = dijit.byId('configure_group_bandwidth_unit').attr('value');
											var duration = dijit.byId('configure_group_duration').attr('value');
											var event_horizon = dijit.byId('configure_group_event_horizon').attr('value');
											var allow_open_mode = dijit.byId('configure_group_allow_open_mode').attr('value');
											var pending = dijit.byId('configure_group_pending').attr('value');
											var group_parent = dijit.byId('configure_group_group_parent').attr('value');

											var banwidth_limit;
											bandwidth_limit = bandwidth;
											if (bandwidth_unit == 'k') {
												bandwidth_limit *= 1000;
											} else if (bandwidth_unit == 'm') {
												bandwidth_limit *= 1000 * 1000;
											} else if (bandwidth_unit == 'g') {
												bandwidth_limit *= 1000 * 1000 * 1000;
											}

											console.log("Allow TCP: '"+allow_tcp+"'");
											console.log("Allow UDP: '"+allow_udp+"'");
											if (allow_tcp) {
												allow_tcp = "on";
											} else {
												allow_tcp = "off";
											}

											if (allow_udp) {
												allow_udp = "on";
											} else {
												allow_udp = "off";
											}

											modify_group(group_id, allow_tcp, allow_udp, bandwidth_limit, duration, event_horizon, allow_open_mode, pending, group_parent);

											dijit.byId('configure_group_dialog').hide();
										},
										group_id)
			);

	dialog.show();
}

</script>

<div id="body" dojoType="dijit.layout.ContentPane">
[% INCLUDE body.tmpl %]
</div>

[% INCLUDE footer.tmpl %]
